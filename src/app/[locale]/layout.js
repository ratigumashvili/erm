import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';

import localFont from "next/font/local";
import "./globals.css";

// import { firaGo } from './_lib/fonts';

import Header from './_components/header';
import Footer from './_components/footer';

const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});
// const firaGo = localFont({
//   src: "../fonts/firago-300.ttf",
//   variable: "--font-firaGo",
//   weight: '300'
// })
const firaGo = localFont({
  src: [
    {
      path: "../fonts/firago-300.ttf",
      variable: "--font-firaGo",
      weight: "300"
    }
  ]
})

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  params
}) {

  const { locale } = await params

  if (!routing.locales.includes(locale)) {
    notFound();
  }

  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body
        // className={`${geistSans.variable} ${geistMono.variable} ${firaGo.variable} antialiased`}
        className={`${firaGo.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>
          <Header locale={locale} />
          <main>
            {children}
          </main>
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
